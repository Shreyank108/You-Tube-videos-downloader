'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _express = require('express');

var _express2 = _interopRequireDefault(_express);

var _instagramNode = require('instagram-node');

var _open = require('open');

var _open2 = _interopRequireDefault(_open);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var AUTH_URL = 'auth';
var DEFAULT_SCOPE = ['basic', 'public_content'];
var DEFAULT_PORT = 3003;

exports.default = function (_ref) {
  var client = _ref.client,
      secret = _ref.secret,
      _ref$scope = _ref.scope,
      scope = _ref$scope === undefined ? DEFAULT_SCOPE : _ref$scope,
      _ref$port = _ref.port,
      port = _ref$port === undefined ? DEFAULT_PORT : _ref$port;

  if (!client || !secret) {
    throw new Error('client and secret options are required');
  }

  if (typeof scope === 'string') {
    scope = scope.split(',');
  }

  return new Promise(function (resolve, reject) {
    var app = (0, _express2.default)();
    var api = (0, _instagramNode.instagram)();
    var redirect = 'http://localhost:' + port + '/';
    var server = null;

    api.use({ client_id: client, client_secret: secret });

    // This is where you would initially send users to authorize
    app.get('/' + AUTH_URL, function (req, res) {
      res.redirect(api.get_authorization_url(redirect, { scope: scope }));
    });

    // This is your redirect URI
    app.get('/', function (req, res) {
      api.authorize_user(req.query.code, redirect, function (err, result) {
        if (err) {
          res.send('There was an error: ' + err);
          reject(new Error(err.body));
        } else {
          res.send('Access token is <pre>' + result.access_token + '</pre>You can close this window and return to the CLI.');
          resolve(result.access_token);
        }
        server.close();
      });
    });

    server = app.listen(port, function () {
      return (0, _open2.default)('' + redirect + AUTH_URL);
    });
  });
};

module.exports = exports['default'];