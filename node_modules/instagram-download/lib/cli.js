#!/usr/bin/env node
'use strict';

var _minimist = require('minimist');

var _minimist2 = _interopRequireDefault(_minimist);

var _download = require('./download');

var _download2 = _interopRequireDefault(_download);

var _read = require('./read');

var _read2 = _interopRequireDefault(_read);

var _doctor = require('./doctor');

var _doctor2 = _interopRequireDefault(_doctor);

var _token = require('./token');

var _token2 = _interopRequireDefault(_token);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var exit = function exit(err) {
  return process.exit(err ? 1 : 0);
};
var debug = require('./util/debug')('cli');
var args = (0, _minimist2.default)(process.argv.slice(2), {
  boolean: ['refresh', 'full', 'read', 'doctor', 'get_token'],
  string: ['dir', 'token', 'user', 'client', 'secret']
});

debug(args);

if (args.doctor) {
  (0, _doctor2.default)(args, function (err, result) {
    if (err) {
      throw err;
    } else {
      console.log(JSON.stringify(result, null, 2));
    }
  });
} else if (args.read) {
  (0, _read2.default)(args, function (err, result) {
    if (err) {
      throw err;
    } else {
      console.log(JSON.stringify(result));
    }
  });
} else if (args.get_token) {
  (0, _token2.default)(args).then(function (res) {
    console.log(res);
    exit();
  }, function (err) {
    console.log(err);
    exit(err);
  });
} else {
  (0, _download2.default)(args, function (err, result) {
    if (err) {
      throw err;
    } else if (!process.env.DEBUG) {
      console.log('Done');
    }
  });
}